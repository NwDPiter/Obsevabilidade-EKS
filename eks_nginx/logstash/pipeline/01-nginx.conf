input {
  beats {
    port => 5044
  }
}

filter {
  # Filtro para logs Nginx em JSON
  if [fields][log_type] == "nginx_access" {
    json {
      source => "message"
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    geoip {
      source => "remote_addr"
      target => "geoip"
    }
    
    useragent {
      source => "http_user_agent"
      target => "user_agent"
    }
  }
  
  # Filtro para logs de erro do Nginx
  if [fields][log_type] == "nginx_error" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:loglevel}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:error_message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  # Filtro para logs do WordPress via Docker
  if [fields][log_type] == "docker_stdout" and [container][name] == "wordpress" {
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] %{LOGLEVEL:loglevel}: %{GREEDYDATA:wp_message}" }
    }
    
    if "_grokparsefailure" in [tags] {
      mutate {
        add_field => { "wp_message" => "%{message}" }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "logs-%{+YYYY.MM.dd}"
  }
}