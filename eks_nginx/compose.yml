version: '3.8'

services:
  # Nginx como proxy reverso Ãºnico
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - elk-network
      - wordpress-network
    depends_on:
      - wordpress
      - kibana
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.http.ssl.enabled=false"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk-network
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    #  - SERVER_BASEPATH=/kibana
    #  - SERVER_REWRITEBASEPATH=true
    networks:
      - elk-network
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  # Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/config/:/usr/share/logstash/config/
      - ./nginx/logs:/var/log/nginx:ro
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
      - XPACK_MONITORING_ENABLED=false
    networks:
      - elk-network
    depends_on:
      - elasticsearch
    command: logstash -f /usr/share/logstash/pipeline/ --config.reload.automatic

  # Filebeat para coletar logs do Nginx
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nginx/logs:/var/log/nginx:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk-network
    depends_on:
      - logstash
    command: >
      bash -c "
      cp /usr/share/filebeat/filebeat.yml /tmp/filebeat.yml &&
      chmod go-w /tmp/filebeat.yml &&
      filebeat -e -c /tmp/filebeat.yml -strict.perms=false
      "
    healthcheck:
      test: ["CMD", "filebeat", "test", "output"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - wordpress-network

  # WordPress
  wordpress:
    image: wordpress:latest
    container_name: wordpress
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./wordpress/logs:/var/www/html/wp-content/logs
    networks:
      - elk-network
      - wordpress-network
    depends_on:
      - mysql

volumes:
  elasticsearch_data:
    driver: local
  mysql_data:
    driver: local

networks:
  elk-network:
    driver: bridge
  wordpress-network:
    driver: bridge